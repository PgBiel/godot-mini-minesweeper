# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy Godot game to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  GODOT_VERSION: "4.1.1"
  GODOT_FOLDER: "godot" # contains the project.godot file
  SITE_FOLDER: "_site" # where to export site assets to

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: chickensoft-games/setup-godot@v1
        name: ðŸ¤– Setup Godot # downloads templates automatically
        with:
          version: ${{ env.GODOT_VERSION }}
          # .NET not needed
          use-dotnet: false
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Setup site path
        run: |
          export SITE_PATH="${{ steps.pages.outputs.base_path }}/${SITE_FOLDER}"
          mkdir "${SITE_PATH}"
      - name: ðŸ”¬ Verify Setup
        run: |
          godot --version
          echo "Pages base path: ${{ steps.pages.outputs.base_path }}"
          echo "Site path: ${SITE_PATH}"
      - name: Bundle coi-service-worker # fix CORS problem
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.min.js "${SITE_PATH}/coi-serviceworker.min.js"
      - name: Export game
        run: |
          cd ${GODOT_FOLDER}
          godot --headless --path . --export-release Web "${SITE_PATH}/index.html"
      - name: Patch site to load coi-service-worker
        run: |
          sed -i "s|<head>|<head><script src="coi-serviceworker.min.js"></script>|" "${SITE_PATH}/index.html"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ env.SITE_FOLDER }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
